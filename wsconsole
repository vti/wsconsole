#!/usr/bin/env perl

use strict;
use warnings;

$| = 1;

require File::Basename;
use IO::Poll qw/POLLIN/;
use Mojo::Client;
use Mojo::IOLoop;

my $address = shift @ARGV;
my $basename = File::Basename::basename($0);
die "usage: $basename <address>" unless $address;

print "Connecting to ws://$address... ";

my $loop = Mojo::IOLoop->singleton;

my $client = Mojo::Client->new(ioloop => $loop);

$client->async->websocket(
    "ws://$address" => sub {
        my $self = shift;

        my $tx = $self->tx;

        if ($tx->has_error) {
            warn "Error: " . join(' ', $self->tx->error);
            return;
        }

        print "Connected\nw> ";

        $self->finished(sub { print "Disconnected\n" });

        $self->receive_message(
            sub {
                my ($self, $message) = @_;

                print "\ns< " . join "\n < " => split /\n/ => $message;
                print "\nw> ";
            }
        );

        my $poll = IO::Poll->new;
        $poll->mask(\*STDIN => POLLIN);

        $loop->tick_cb(
            sub {
                $poll->poll(0);

                if (my @read = $poll->handles(POLLIN)) {
                    my $message = '';
                    while (<STDIN>) {
                        $message .= $_;
                        print ' > ';
                    }

                    $tx->send_message($message);
                }
            }
        );
    }
)->process;

$loop->start;
